<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Arches.TypeSets;
<#
    for (var i = 1; i <= 8; i++)
    {
        var types = string.Join(", ", Enumerable.Range(0, i).Select(n => $"T{n}"));
#>

public readonly partial record struct TypeSet<<#= types #>>
{
<#
        for (var j = i + 1; j <= 8; j++)
        {
            var ex_types = string.Join(", ", Enumerable.Range(i, j - i).Select(n => $"T{n}"));
#>

    public TypeSet<<#= types #>, <#= ex_types #>> With<<#= ex_types #>>() => default;
<#
        }
        for (var j = 9; j <= i + 8; j++)
        {
            if (j > 15) continue;
            var f_types = string.Join(", ", Enumerable.Range(0, 8).Select(n => $"T{n}"));
            var ex_types = string.Join(", ", Enumerable.Range(i, j - i).Select(n => $"T{n}"));
            var l_types = string.Join(", ", Enumerable.Range(8, j - 8).Select(n => $"T{n}"));
#>

    public TypeSet<TypeSet<<#= f_types #>>, <#= l_types #>> With<<#= ex_types #>>() => default;
<#
        }
#>

}
<#
    }
#>
